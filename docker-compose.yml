services:
    app:
        container_name: "app"
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - '.:/app'
        ports:
            - '3000:3000'
        depends_on:
            mongo:
                condition: service_healthy
        environment:
            - >-
                MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/nextjs
        healthcheck:
            test: 'curl --fail -s http://127.0.0.1:3000/ || exit 1'
            interval: 1m30s
            timeout: 10s
            retries: 5
            start_period: 5s
    mongo:
        container_name: "mongo"
        image: 'mongo:latest'
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        volumes:
            - 'mongo-data:/data/db'
        ports:
            - '27017:27017'
        healthcheck:
            test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 5s
    mongo-express:
        container_name: "mongo-express"
        image: mongo-express:latest
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
            - ME_CONFIG_MONGODB_SERVER=mongo
            - ME_CONFIG_OPTIONS_EDITORTHEME=material
            - ME_CONFIG_BASICAUTH_USERNAME=admin
            - ME_CONFIG_BASICAUTH_PASSWORD=password
        ports:
            - 8081:8081
        depends_on:
            mongo:
                condition: service_healthy
volumes:
    mongo-data:
        driver: local

